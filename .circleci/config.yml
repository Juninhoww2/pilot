version: 2.1

orbs:
  node: circleci/node@3.0.1
  aws-cli: circleci/aws-cli@1.2.1
  aws-s3: circleci/aws-s3@1.0.16

attach_workspace: &attach_workspace
  attach_workspace:
    at: .

jobs:
  install-dependencies:
    executor: node/default
    steps:
      - checkout
      - restore_cache:
          keys:
          - dependencies-{{ checksum "yarn.lock" }}
          - dependencies-
      - run: yarn install
      - save_cache:
          paths:
            - node_modules
            - packages/cockpit/node_modules
            - packages/pilot/node_modules
          key: dependencies-{{ checksum "yarn.lock" }}
      - persist_to_workspace:
          root: .
          paths: .

  build:
    executor: node/default
    steps:
      - *attach_workspace
      - run: |
          cd packages/pilot && yarn build

  cockpit-lint:
    executor: node/default
    steps:
      - *attach_workspace
      - run: |
          cd packages/cockpit && yarn lint

  cockpit-test:
    executor: node/default
    environment:
      TZ: America/Sao_Paulo
    steps:
      - *attach_workspace
      - run: |
          cd packages/cockpit && yarn test

  pilot-lint:
    executor: node/default
    steps:
      - *attach_workspace
      - run: |
          cd packages/pilot && yarn lint

  percy:
    docker:
      - image: "circleci/node:12.18.2-browsers"
    steps:
      - *attach_workspace
      - run: |
          cd packages/pilot
          yarn add @percy/storybook@3.3.0
          yarn run build-storybook
          yarn run percy

  build_for_deploy:
    executor: node/default
    parameters:
      environment:
        type: enum
        enum: ["live", "sandbox"]
      live_url:
        type: string
      test_url:
        type: string
      persist_at:
        type: string
      public_url:
        type: string
      recaptcha_key:
        type: env_var_name

    steps:
      - *attach_workspace
      - run:
          name: Building site
          command: |
            cd packages/pilot
            PUBLIC_URL=<< parameters.public_url >> \
            REACT_APP_API_ENVIRONMENT=<< parameters.environment >> \
            REACT_APP_LIVE_URL=<< parameters.live_url >> \
            REACT_APP_TEST_URL=<< parameters.test_url >> \
            REACT_APP_RECAPTCHA_KEY=${<< parameters.recaptcha_key >>} \
            yarn run build
            mkdir -p builds/<< parameters.persist_at >>
            mv build/* builds/<< parameters.persist_at >>
      - persist_to_workspace:
          root: ./
          paths:
            - packages/pilot/builds

  deploy:
    executor: aws-cli/default
    parameters:
      aws_access_key_id:
        type: env_var_name
      aws_secret_access_key:
        type: env_var_name
      cloudfront_id:
        type: env_var_name
      s3_path:
        type: string
      persisted_at:
        type: string

    steps:
      - *attach_workspace
      - aws-s3/sync:
          arguments: --delete
          aws-access-key-id: << parameters.aws_access_key_id >>
          aws-secret-access-key: << parameters.aws_secret_access_key >>
          from: packages/pilot/builds/<< parameters.persisted_at >>
          to: << parameters.s3_path >>
      - run:
          name: Create AWS CloudFront invalidation
          command: |
            AWS_ACCESS_KEY_ID=${<< parameters.aws_access_key_id >>} \
            AWS_SECRET_ACCESS_KEY=${<< parameters.aws_secret_access_key >>} \
            aws cloudfront create-invalidation --distribution-id ${<< parameters.cloudfront_id >>}  --paths "/*"

workflows:
  main:
    jobs:
      - install-dependencies:
          filters:
            tags:
              only: /.*/

      - build:
          requires:
            - install-dependencies
          filters:
            tags:
              ignore: /.*/
      - cockpit-lint:
          requires:
            - install-dependencies
          filters:
            tags:
              only: /.*/
      - cockpit-test:
          requires:
            - install-dependencies
          filters:
            tags:
              only: /.*/
      - pilot-lint:
          requires:
            - install-dependencies
          filters:
            tags:
              only: /.*/
      - percy:
          requires:
            - install-dependencies
          filters:
            tags:
              ignore: /.*/

      # STAGING
      ## versions
      - build_for_deploy:
          name: build-stg-live-versions
          environment: live
          live_url: https://beta.dashboard.stg.pagarme.net/versions/${CIRCLE_TAG}/index.html
          test_url: https://beta.dashboard.sandbox.stg.pagarme.net/${CIRCLE_TAG}/index.html
          persist_at: stg-live-versions
          public_url: https://beta.dashboard.stg.pagarme.net/versions/${CIRCLE_TAG}
          recaptcha_key: RECAPTCHA_KEY_LIVE
          requires:
            - install-dependencies
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v([0-9]+).([0-9]+).([0-9]+)-.*$/

      - deploy:
          name: deploy-stg-live-versions
          aws_access_key_id: AWS_ACCESS_KEY_ID_STG
          aws_secret_access_key: AWS_SECRET_ACCESS_KEY_STG
          cloudfront_id: CDN_DISTRIBUTION_ID
          s3_path: s3://beta.dashboard.stg.pagarme.net/versions/${CIRCLE_TAG}
          persisted_at: stg-live-versions
          requires:
            - build-stg-live-versions
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v([0-9]+).([0-9]+).([0-9]+)-.*$/

      - build_for_deploy:
          name: build-stg-sandbox-versions
          environment: sandbox
          live_url: https://beta.dashboard.stg.pagarme.net/versions/${CIRCLE_TAG}/index.html
          test_url: https://beta.dashboard.sandbox.stg.pagarme.net/${CIRCLE_TAG}/index.html
          persist_at: stg-sandbox-versions
          public_url: https://beta.dashboard.sandbox.stg.pagarme.net/versions/${CIRCLE_TAG}
          recaptcha_key: RECAPTCHA_KEY_SANDBOX
          requires:
            - install-dependencies
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v([0-9]+).([0-9]+).([0-9]+)-.*$/

      - deploy:
          name: deploy-stg-sandbox-versions
          aws_access_key_id: AWS_ACCESS_KEY_ID_STG
          aws_secret_access_key: AWS_SECRET_ACCESS_KEY_STG
          cloudfront_id: CDN_DISTRIBUTION_ID_SANDBOX
          s3_path: s3://beta.dashboard.sandbox.stg.pagarme.net/versions/${CIRCLE_TAG}
          persisted_at: stg-sandbox-versions
          requires:
            - build-stg-sandbox-versions
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v([0-9]+).([0-9]+).([0-9]+)-.*$/

      ## latest
      - build_for_deploy:
          name: build-stg-live-latest
          environment: live
          live_url: https://beta.dashboard.stg.pagarme.net/latest
          test_url: https://beta.dashboard.sandbox.stg.pagarme.net/latest
          persist_at: stg-live-latest
          public_url: https://beta.dashboard.stg.pagarme.net/latest
          recaptcha_key: RECAPTCHA_KEY_LIVE
          requires:
            - install-dependencies
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v([0-9]+).([0-9]+).([0-9]+)-.*$/

      - deploy:
          name: deploy-stg-live-latest
          aws_access_key_id: AWS_ACCESS_KEY_ID_STG
          aws_secret_access_key: AWS_SECRET_ACCESS_KEY_STG
          cloudfront_id: CDN_DISTRIBUTION_ID
          s3_path: s3://beta.dashboard.stg.pagarme.net/latest
          persisted_at: stg-live-latest
          requires:
            - build-stg-live-latest
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v([0-9]+).([0-9]+).([0-9]+)-.*$/

      - build_for_deploy:
          name: build-stg-sandbox-latest
          environment: sandbox
          live_url: https://beta.dashboard.stg.pagarme.net/latest
          test_url: https://beta.dashboard.sandbox.stg.pagarme.net/latest
          persist_at: stg-sandbox-latest
          public_url: https://beta.dashboard.sandbox.stg.pagarme.net/latest
          recaptcha_key: RECAPTCHA_KEY_SANDBOX
          requires:
            - install-dependencies
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v([0-9]+).([0-9]+).([0-9]+)-.*$/

      - deploy:
          name: deploy-stg-sandbox-latest
          aws_access_key_id: AWS_ACCESS_KEY_ID_STG
          aws_secret_access_key: AWS_SECRET_ACCESS_KEY_STG
          cloudfront_id: CDN_DISTRIBUTION_ID_SANDBOX
          s3_path: s3://beta.dashboard.sandbox.stg.pagarme.net/latest
          persisted_at: stg-sandbox-latest
          requires:
            - build-stg-sandbox-latest
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v([0-9]+).([0-9]+).([0-9]+)-.*$/

      # PRODUCTION
      - build_for_deploy:
          name: build-prd-live
          environment: live
          live_url: https://beta.dashboard.pagar.me/
          test_url: https://beta.dashboard.sandbox.pagar.me/
          persist_at: prd-live
          public_url: https://beta.dashboard.pagar.me/
          recaptcha_key: RECAPTCHA_KEY_LIVE
          requires:
            - install-dependencies
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v([0-9]+).([0-9]+).([0-9]+)$/

      - build_for_deploy:
          name: build-prd-sandbox
          environment: sandbox
          live_url: https://beta.dashboard.pagar.me/
          test_url: https://beta.dashboard.sandbox.pagar.me/
          persist_at: prd-sandbox
          public_url: https://beta.dashboard.sandbox.pagar.me
          recaptcha_key: RECAPTCHA_KEY_SANDBOX
          requires:
            - install-dependencies
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v([0-9]+).([0-9]+).([0-9]+)$/

      - hold:
          type: approval
          requires:
            - build-prd-live
            - build-prd-sandbox
            - cockpit-lint
            - cockpit-test
            - pilot-lint
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v([0-9]+).([0-9]+).([0-9]+)$/

      - deploy:
          name: deploy-prd-live
          aws_access_key_id: AWS_ACCESS_KEY_ID_PRD
          aws_secret_access_key: AWS_SECRET_ACCESS_KEY_PRD
          cloudfront_id: PRD_CDN_DISTRIBUTION_ID
          s3_path: s3://beta.dashboard.prd.pagarme.net
          persisted_at: prd-live
          requires:
            - hold
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v([0-9]+).([0-9]+).([0-9]+)$/

      - deploy:
          name: deploy-prd-sandbox
          aws_access_key_id: AWS_ACCESS_KEY_ID_PRD
          aws_secret_access_key: AWS_SECRET_ACCESS_KEY_PRD
          cloudfront_id: PRD_CDN_DISTRIBUTION_ID_SANDBOX
          s3_path: s3://beta.dashboard.sandbox.prd.pagarme.net
          persisted_at: prd-sandbox
          requires:
            - hold
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v([0-9]+).([0-9]+).([0-9]+)$/
